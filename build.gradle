plugins {
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.sonarqube' version '2.8'
	id "jacoco"

}

repositories {
	mavenCentral()
}

group = 'edu.escuelaing.ieti'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.springframework', name: 'spring-context', version: '5.3.4'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
	testCompile group: 'junit', name: 'junit', version: '4.12'
	implementation group: 'org.hibernate', name: 'hibernate-validator', version: '7.0.1.Final'
	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
	implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.+')
	implementation 'com.amazonaws:aws-java-sdk-s3'
	testImplementation group: 'io.findify', name: 's3mock_2.12', version: '0.2.5'

}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		html.enabled true
		xml.enabled true
	}
	afterEvaluate {
		getClassDirectories().setFrom(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'**/edu/escuelaing/ieti/startapp/web/requests/**',
					'**/edu/escuelaing/ieti/startapp/StartappApplication**',
					'**/edu/escuelaing/ieti/startapp/web/handlers/Error**'
			])
		})
	}
}
jacoco {
	reportsDir = file("${project.projectDir}/build/reports")
}

sonarqube {
	properties {
		property "sonar.projectKey", "IETI-StartApp_StartApp-Backend"
		property "sonar.organization", "ieti-startapp"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/test/jacocoTestReport.xml"
		property 'sonar.junit.reportsPath', "${buildDir}/test-results"
		property 'sonar.binaries', "${buildDir}/classes/main/"
		property "sonar.core.codeCoveragePlugin", "jacoco"
		property "sonar.verbose", "true"
		property "sonar.sources", "src/main/"
		property "sonar.tests", "src/test/"
		property "sonar.coverage.exclusions", "**/edu/escuelaing/ieti/startapp/web/requests/**," + "**/edu/escuelaing/ieti/startapp/StartappApplication**," + "**/edu/escuelaing/ieti/startapp/web/handlers/Error**"
	}
}

tasks.named("sonarqube") {
	dependsOn(tasks.named("jacocoTestReport"))
}

check.dependsOn jacocoTestReport
